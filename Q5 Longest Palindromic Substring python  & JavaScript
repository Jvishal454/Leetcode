class Solution:
    def longestPalindrome(self, s: str) -> str:
        res = ""
        longestResult = 0
        
        
        for i in range(len(s)):
            #odd
            l , r = i , i
            while l >= 0 and r < len(s) and s[l] == s[r]:
                if (r - l + 1) > longestResult:
                    res = s[l:r+1]
                    longestResult = r - l + 1
                l -= 1
                r += 1
            #even  
            l , r = i , i + 1
            while l >= 0 and r < len(s) and s[l] == s[r]:
                if (r - l + 1) > longestResult:
                    res = s[l:r+1]
                    longestResult = r - l + 1
                l -= 1
                r += 1             
        return res
--------JavaScript--------------------------------
/**
 * @param {string} s
 * @return {string}
 */
var longestPalindrome = function(s) {
    let res = ""
    let longestRes = 0

    for(i=0; i<s.length; i++){
        var l = i, r = i
        while(l >= 0 & r < s.length & s[l] == s[r]){
            if( r - l + 1> longestRes){
                res = s.substring(l, r + 1)
                longestRes = r - l
            }
            l -= 1
            r += 1
        }
        var l = i, r = i + 1
        while(l >= 0 & r < s.length & s[l] == s[r]){
            if( r - l + 1> longestRes){
                res = s.substring(l, r + 1)
                longestRes = r - l
            }
            l -= 1
            r += 1
        }
    }
    return res
    
};
